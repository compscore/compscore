// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/compscore/compscore/pkg/ent/check"
	"github.com/compscore/compscore/pkg/ent/credential"
	"github.com/compscore/compscore/pkg/ent/round"
	"github.com/compscore/compscore/pkg/ent/schema"
	"github.com/compscore/compscore/pkg/ent/score"
	"github.com/compscore/compscore/pkg/ent/status"
	"github.com/compscore/compscore/pkg/ent/user"
	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	checkFields := schema.Check{}.Fields()
	_ = checkFields
	// checkDescName is the schema descriptor for name field.
	checkDescName := checkFields[1].Descriptor()
	// check.NameValidator is a validator for the "name" field. It is called by the builders before save.
	check.NameValidator = checkDescName.Validators[0].(func(string) error)
	// checkDescWeight is the schema descriptor for weight field.
	checkDescWeight := checkFields[2].Descriptor()
	// check.WeightValidator is a validator for the "weight" field. It is called by the builders before save.
	check.WeightValidator = checkDescWeight.Validators[0].(func(int) error)
	// checkDescID is the schema descriptor for id field.
	checkDescID := checkFields[0].Descriptor()
	// check.DefaultID holds the default value on creation for the id field.
	check.DefaultID = checkDescID.Default.(func() uuid.UUID)
	credentialFields := schema.Credential{}.Fields()
	_ = credentialFields
	// credentialDescID is the schema descriptor for id field.
	credentialDescID := credentialFields[0].Descriptor()
	// credential.DefaultID holds the default value on creation for the id field.
	credential.DefaultID = credentialDescID.Default.(func() uuid.UUID)
	roundFields := schema.Round{}.Fields()
	_ = roundFields
	// roundDescNumber is the schema descriptor for number field.
	roundDescNumber := roundFields[1].Descriptor()
	// round.NumberValidator is a validator for the "number" field. It is called by the builders before save.
	round.NumberValidator = roundDescNumber.Validators[0].(func(int) error)
	// roundDescCompleted is the schema descriptor for completed field.
	roundDescCompleted := roundFields[2].Descriptor()
	// round.DefaultCompleted holds the default value on creation for the completed field.
	round.DefaultCompleted = roundDescCompleted.Default.(bool)
	// roundDescID is the schema descriptor for id field.
	roundDescID := roundFields[0].Descriptor()
	// round.DefaultID holds the default value on creation for the id field.
	round.DefaultID = roundDescID.Default.(func() uuid.UUID)
	scoreFields := schema.Score{}.Fields()
	_ = scoreFields
	// scoreDescScore is the schema descriptor for score field.
	scoreDescScore := scoreFields[1].Descriptor()
	// score.ScoreValidator is a validator for the "score" field. It is called by the builders before save.
	score.ScoreValidator = scoreDescScore.Validators[0].(func(int) error)
	// scoreDescID is the schema descriptor for id field.
	scoreDescID := scoreFields[0].Descriptor()
	// score.DefaultID holds the default value on creation for the id field.
	score.DefaultID = scoreDescID.Default.(func() uuid.UUID)
	statusFields := schema.Status{}.Fields()
	_ = statusFields
	// statusDescTimestamp is the schema descriptor for timestamp field.
	statusDescTimestamp := statusFields[3].Descriptor()
	// status.DefaultTimestamp holds the default value on creation for the timestamp field.
	status.DefaultTimestamp = statusDescTimestamp.Default.(func() time.Time)
	// statusDescPoints is the schema descriptor for points field.
	statusDescPoints := statusFields[4].Descriptor()
	// status.PointsValidator is a validator for the "points" field. It is called by the builders before save.
	status.PointsValidator = statusDescPoints.Validators[0].(func(int) error)
	// statusDescID is the schema descriptor for id field.
	statusDescID := statusFields[0].Descriptor()
	// status.DefaultID holds the default value on creation for the id field.
	status.DefaultID = statusDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[1].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[2].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
