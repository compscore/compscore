basePath: /api
definitions:
  models.AdminLogin:
    description: body of admin login request
    properties:
      team:
        type: string
    type: object
  models.AdminPasswordReset:
    description: body of admin password reset request
    properties:
      password:
        type: string
      team:
        type: string
    type: object
  models.ChangePassword:
    description: body of change password request
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    type: object
  models.Check:
    properties:
      edges:
        properties:
          credential:
            items: {}
            type: array
          status:
            items: {}
            type: array
        type: object
      name:
        type: string
    type: object
  models.Cookie:
    description: response of login request
    properties:
      domain:
        type: string
      expiration:
        type: integer
      httponly:
        type: boolean
      name:
        type: string
      path:
        type: string
      secure:
        type: boolean
      token:
        type: string
    type: object
  models.Credential:
    properties:
      edges:
        properties:
          check: {}
          team: {}
        type: object
      password:
        type: string
    type: object
  models.Error:
    description: response of login request
    properties:
      error:
        type: string
    type: object
  models.Login:
    description: body of login request
    properties:
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact:
    name: 1nv8rzim
    url: https://github.com/compsore/compscore/issues
  description: This is the API for the Compscore application
  title: Compscore API
  version: "1.0"
paths:
  /api/admin/login:
    post:
      consumes:
      - application/json
      description: Authenticate into another team and return a JWT
      parameters:
      - description: Team name
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.AdminLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Cookie'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      summary: Authenticate into another team
      tags:
      - admin
  /api/admin/password:
    post:
      consumes:
      - application/json
      description: Reset password of another team
      parameters:
      - description: Team name and new password
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.AdminPasswordReset'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Reset password of another team
      tags:
      - admin
  /api/checks:
    get:
      consumes:
      - application/json
      description: Get all checks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Check'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get all checks
      tags:
      - check
  /api/checks/{check}:
    get:
      consumes:
      - application/json
      description: Get a check
      parameters:
      - description: Check ID
        in: path
        name: check
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Check'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get a check
      tags:
      - check
  /api/credentials:
    get:
      consumes:
      - application/json
      description: Get all credentials for a team
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Credential'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get all credentials for a team
      tags:
      - credential
  /api/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a JWT
      parameters:
      - description: Username and password
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Cookie'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      summary: Authenticate a user
      tags:
      - auth
  /api/password:
    post:
      consumes:
      - application/json
      description: Change a user's password
      parameters:
      - description: Old and new password
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.ChangePassword'
      produces:
      - application/json
      responses:
        "200":
          description: Password changed
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Change a user's password
      tags:
      - auth
securityDefinitions:
  ServiceAuth:
    description: JWT for authentication
    in: cookie
    name: auth
    type: apiKey
swagger: "2.0"
